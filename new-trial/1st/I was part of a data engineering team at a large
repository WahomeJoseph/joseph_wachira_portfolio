 I was part of a data engineering team at a large banking institution tasked with optimizing the data warehouse infrastructure. The bank used Snowflake as their primary data warehouse solution to manage and analyze large volumes of transactional and customer data. As the scale of operations grew, the monthly costs associated with Snowflake increased significantly, and my role was to identify opportunities for cost reduction while maintaining or enhancing performance.

To address high costs from unmonitored resource use, I implemented detailed monitoring of resource usage across different departments and set up Snowflake's Resource Monitors to track credit usage and send alerts when thresholds were approached, reducing unnecessary resource consumption by 20% and saving approximately $10,000 per month. For inefficient queries that led to excessive compute time, I conducted an audit of the most expensive queries, worked with teams to rewrite them for better performance, and introduced best practices for writing efficient SQL queries. This improved query performance by 30%, reducing compute costs by around $15,000 per month. To manage high storage costs from keeping too much old data, I implemented data retention policies to regularly archive or purge old and unused data, using Snowflake's Time Travel and Fail-safe features strategically, which reduced storage costs by 25%, saving the bank $5,000 per month.